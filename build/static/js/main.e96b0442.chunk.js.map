{"version":3,"sources":["colors.ts","components/Frontpage.tsx","components/ProblemView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","Frontpage","className","style","fontSize","marginBottom","fontWeight","title","body","upvotes","id","map","question","display","alignItems","marginRight","background","width","height","justifyContent","borderRadius","boxShadow","flexShrink","paddingLeft","paddingRight","to","color","lineHeight","maxHeight","overflow","position","top","left","right","Solution","solution","marginTop","flex","flexDirection","description","ProblemView","problemId","useParams","useState","undefined","solutions","setSolutions","problem","setProblem","useEffect","setTimeout","backgroundColor","padding","App","margin","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e96b0442.chunk.js","sourcesContent":["export const colors = {\n  pink: \"#f2aeb1\",\n  gold: \"#faeec8\",\n  jade: \"#4b806d\",\n};\n","import { Link } from \"react-router-dom\";\nimport { colors } from \"../colors\";\n\nexport const Frontpage = () => {\n  const questions = [\n    {\n      title: \"Do you think humans will ever walk on the sun?\",\n      body: \"I was just thinking and thought how crazy it was that a person walked on the moon and mars. I was just wonder if you think a person will ever be able to walk on the sun too? I know it's really hot but I'm thinking if you go in the winter when the sun is like 30 degrees I bet they could do it.\",\n      upvotes: 420,\n      id: 1,\n    },\n    {\n      title: \"Is Christian Bale a Christian since his name is Christian?\",\n      body: \"His parents must have named him Christian for some reason?\",\n      upvotes: 301,\n      id: 2,\n    },\n    {\n      title: \"HOW DO I TURN OFF CAPSLOCK?\",\n      body: \"I ACCIDENTALLY TURNED IT ON YESTERDAY AND I DONT KNOW HOW TO TURN IT BACK OFF. ALL MY FRIENDS ARE MAD BECAUSE THEY THINK I AM SHOUTING AT THEM OVER THE INTERNET. THIS PROBLEM IS LITERALLY RUINING MY LIFE AND TEARING MY FAMILY APART THROUGH EMAILS. I JSUT WANT TO BE WHOLE AGAIN. PLEASE HELP!!!\",\n      upvotes: 94,\n      id: 3,\n    },\n    {\n      title:\n        \"Has Anyone Really Been Far Even as Decided to Use Even Go Want to do Look More Like?\",\n      body: \"Title says it all.\",\n      upvotes: 69,\n      id: 4,\n    },\n  ];\n\n  return (\n    <div className=\"content-wrapper\">\n      <div style={{ fontSize: 48, marginBottom: 16, fontWeight: 100 }}>\n        SLTN™\n      </div>\n\n      <div style={{ marginBottom: 32, fontWeight: 100 }}>\n        <em>Top questions, Top answers</em>\n      </div>\n\n      <div>\n        {questions.map((question) => (\n          <div\n            style={{\n              marginBottom: 64,\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: 16,\n              }}\n            >\n              <div\n                style={{\n                  marginRight: 32,\n                  background: colors.gold,\n                  width: 64,\n                  height: 64,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: 32,\n                  boxShadow: \"4px 2px 0 \" + colors.jade,\n                  flexShrink: 0,\n                }}\n              >\n                <div style={{ paddingLeft: 4 }}>{question.upvotes} ↑</div>\n              </div>\n              <div\n                style={{\n                  fontSize: 22,\n                  paddingRight: 16,\n                }}\n              >\n                <Link className=\"title-link\" to={\"/problems/\" + question.id}>\n                  {question.title}\n                </Link>\n              </div>\n            </div>\n            <div\n              style={{\n                paddingLeft: 64 + 32,\n                paddingRight: 32,\n                color: \"#444\",\n                lineHeight: 1.5,\n                maxHeight: 64 + 32 + 16,\n                overflow: \"hidden\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: 32 + 16,\n                  background:\n                    \"linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%)\",\n                  left: 0,\n                  right: 0,\n                  height: 64,\n                }}\n              />\n              {question.body}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {colors} from '../colors';\n\ninterface Problem {\n  title: string;\n  description: string;\n  upvotes: number;\n}\n\ninterface Solution {\n  title: string;\n  description: string;\n  upvotes: number;\n}\n\nconst Solution = ({solution}: {solution: Solution}) => {\n  return (\n    <div style={{marginTop: 8, display: 'flex', flex: 1, flexDirection: 'row', alignItems: 'center'}}>\n      <div style={{marginRight: 16}}>\n        <span>⬆️</span><span>{solution.upvotes}</span>\n      </div>\n      <div>\n        <h4>{solution.title}</h4>\n        <p>{solution.description}</p>\n      </div>\n    </div>);\n};\n\nexport const ProblemView = () => {\n  const {problemId} = useParams<{problemId: string}>();\n\n  const [solutions, setSolutions] = useState<Solution[] | undefined>(undefined);\n  const [problem, setProblem] = useState<Problem | undefined>(undefined);\n\n  const getProblem = (problemId: string) => {\n    // soon: firebase.get(problemId)\n    setProblem({\n      title: \"Sponge buildup\",\n      description: \"Oftentimes my household sponges accumulate an awful amount of buildup, how can I solve this?\",\n      upvotes: 29,\n    });\n  };\n\n  const getSolutions = (problemId: string) => {\n    // soon: firebase.get(problemId)\n    setSolutions([\n      {\n        title: \"Dry sponge is a happy sponge\",\n        description: \"Thank you for this question. A very important part of any sponge keeping is to keep them dry. A dry sponge is a happy sponge.\",\n        upvotes: 1337,\n      },\n      {\n        title: \"Keep them wet\",\n        description: \"As long as your sponges are constantly wet they won't get any more gross.\",\n        upvotes: -12,\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    // TODO: remove this setTimeout when firebase integration is merged\n    setTimeout(() =>\n      getProblem(problemId)\n      , 1000);\n  }, [problemId]);\n\n  useEffect(() => {\n    if (problem) {\n      // TODO: remove this setTimeout when firebase integration is merged\n      setTimeout(() =>\n        getSolutions(problemId)\n        , 1000);\n    }\n  }, [problem]);\n\n  if (!problem) {\n    return (\n      <div className=\"content-wrapper\">\n        <h1>Loading...</h1>\n        <p>Please wait</p>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"content-wrapper\">\n        <div style={{display: 'flex', flex: 1, flexDirection: 'row', alignItems: 'center'}}>\n          <div style={{marginRight: 24, backgroundColor: colors.gold, borderRadius: 48, padding: 24, display: 'flex', flexDirection: 'row'}}>\n            <span>⬆️</span><span>{problem.upvotes}</span>\n          </div>\n          <div>\n            <h1>{problem.title}</h1>\n            <p>{problem.description}</p>\n          </div>\n        </div>\n\n        {solutions &&\n          <div style={{marginTop: 24}}>\n            <h2>Solutions</h2>\n            {solutions.map(solution =>\n              <Solution solution={solution} />\n            )}\n          </div>\n        }\n      </div>\n    );\n  }\n};\n","import React from \"react\"; import {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\nimport \"./App.css\";\nimport {Frontpage} from \"./components/Frontpage\";\nimport {ProblemView} from './components/ProblemView';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"body-container\">\n        <div\n          style={{\n            display: \"flex\",\n            margin: 32,\n          }}\n        >\n          <div>\n            <Link to=\"/\" className=\"header-item\">\n              Home\n            </Link>\n          </div>\n          <div>\n            <Link to=\"/problem/1\" className=\" header-item\">Problems</Link>\n          </div>\n        </div>\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <Frontpage />\n          </Route>\n          <Route path=\"/problem/:problemId\" exact={true}>\n            <ProblemView />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}